####################################
# Preprocess
####################################

%apphelp preprocess
This script will perform basic preprocessing, including cleaning and feature
    selection for a dataset. If used without providing any input arguments,
    the dataset that comes with the container (GolubData.rda) is used by 
    default. If you run the application module alone, you can specify your own.
    Here are some examples using a SCIF installed in a Docker container:

    # Run with default input data, and output to /tmp mapped to $PWD
    

%appfiles preprocess
    /src/GolubData.rda

%appinstall preprocess
    cp /src/PPFS.R bin/
    cp /src/run_preprocess.R bin/

%appenv preprocess
    PPFS_DATA="${SCIF_APPROOT}/GolubData.rda"
    export PPFS_DATA PPFS_FUNCS

%apprun preprocess
    if [ $# -eq 0 ]
        then
        Rscript ${SCIF_APPBIN}/run_preprocess.R "${PPFS_DATA}"
    else
        Rscript ${SCIF_APPBIN}/run_preprocess.R "$@"
    fi


    

####################################
# Classify
####################################

%apphelp classify
Classification is done after preprocessing, and so it requires an input
    data file saved from the preprocess step.  The result is printed to the
    console at the end.

%appinstall classify
    cp /src/Classifier.R bin/
    cp /src/run_classify.R bin/

%apprun classify
    exec Rscript ${SCIF_APPBIN}/run_classify.R "$@"


####################################
# Pipeline
####################################

%apprun pipeline
    #PPFS_DATA=$(Rscript ${SCIF_APPRUN_preprocess})
    PPFS_DATA=$(scif run preprocess)
    scif run classify $PPFS_DATA    
    #Rscript ${SCIF_APPRUN_classify} $PPFS_DATA
